// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyecto.Models;

namespace proyecto.Migrations
{
    [DbContext(typeof(ClienteContext))]
    partial class ClienteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("proyecto.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClienteId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Contador")
                        .HasColumnName("Contador")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<DateTime?>("FechaCumpleaños")
                        .HasColumnName("FechaCumpleaños")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lat")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Long")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<double?>("MontoTotal")
                        .HasColumnName("MontoTotal")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Rnc")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("proyecto.Models.Factura", b =>
                {
                    b.Property<int>("Idfactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Idfactura")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<int>("Cantidad_Art")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("DateTime");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<double>("Itbis")
                        .HasColumnType("float");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<double?>("SubTotal")
                        .HasColumnName("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Idfactura");

                    b.ToTable("facturas");
                });

            modelBuilder.Entity("proyecto.Models.Productos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdProducto")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("Contador")
                        .HasColumnName("Contador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Produc")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("IdProducto");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("proyecto.Models.Reportes", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("IdProducto")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("IdServicio")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("IdReporte");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("proyecto.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdServicio")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Contador")
                        .HasColumnName("Contador")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Nombre_Servic")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("IdServicio");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("proyecto.Models.Vendidos", b =>
                {
                    b.Property<int>("IdVendido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Contador")
                        .HasColumnName("Contador")
                        .HasColumnType("int");

                    b.Property<int>("IdPS")
                        .HasColumnName("IdPS")
                        .HasColumnType("int");

                    b.HasKey("IdVendido");

                    b.HasIndex("IdPS");

                    b.ToTable("vendidos");
                });

            modelBuilder.Entity("proyecto.Models.Vendidos", b =>
                {
                    b.HasOne("proyecto.Models.Productos", "Productos")
                        .WithMany()
                        .HasForeignKey("IdPS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdPS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
